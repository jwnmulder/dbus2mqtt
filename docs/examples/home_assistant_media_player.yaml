# mqtt:
#   host:
#   port:

dbus:
  subscriptions:

    - bus_name: org.mpris.MediaPlayer2.*
      path: /org/mpris/MediaPlayer2
      # https://mpris2.readthedocs.io/en/latest/interfaces.html#mpris2.MediaPlayer2

      interfaces:
        - interface: org.freedesktop.DBus.Properties
          signals:
            - signal: PropertiesChanged
              filter: "{{ args[0] == 'org.mpris.MediaPlayer2.Player' }}"
          methods:
            - method: GetAll

        - interface: org.mpris.MediaPlayer2
          mqtt_command_topic: dbus2mqtt/org.mpris.MediaPlayer2/command
          methods:
            - method: Quit

        - interface: org.mpris.MediaPlayer2.Player
          mqtt_command_topic: dbus2mqtt/org.mpris.MediaPlayer2/command
          signals:
            - signal: Seeked
          methods:
            - method: Pause
            - method: Play
            - method: Stop
            - method: Next
            - method: Previous
            - method: Seek
            - method: SetPosition
            - method: PlayPause
            - method: OpenUri
          properties:
            - property: Volume

      flows:
        - name: "MPRIS publish player state"
          triggers:
            - type: bus_name_added
            - type: schedule
              interval: {seconds: 5}
            - type: dbus_signal
              interface: org.freedesktop.DBus.Properties
              signal: PropertiesChanged
              # filter: "{{ args[0] == 'org.mpris.MediaPlayer2.Player' }}"
            - type: dbus_signal
              interface: org.mpris.MediaPlayer2.Player
              signal: Seeked
          actions:
            - type: context_set
              context:
                mpris_bus_name: '{{ dbus_list("org.mpris.MediaPlayer2.*") | first }}'
                path: /org/mpris/MediaPlayer2
            - type: context_set
              context:
                player_properties: |
                  {{ dbus_call(mpris_bus_name, path, 'org.freedesktop.DBus.Properties', 'GetAll', ['org.mpris.MediaPlayer2.Player']) }}
                volume: |
                  {{ dbus_property_get(mpris_bus_name, path, 'org.mpris.MediaPlayer2.Player', 'Volume', 0) }}
            - type: mqtt_publish
              topic: dbus2mqtt/org.mpris.MediaPlayer2/state
              payload_type: json
              payload_template: |
                {{
                    { 'bus_name': mpris_bus_name }
                    | combine(player_properties)
                    | combine({ 'Volume': volume })
                    | combine({ 'properties': properties | default({}) })
                }}
        - name: "MPRIS player added"
          triggers:
            - type: bus_name_added
          actions:
            - type: context_set
              dbus_object_context:
                properties: |
                  {{ dbus_call(bus_name, path, 'org.freedesktop.DBus.Properties', 'GetAll', ['org.mpris.MediaPlayer2']) }}
        - name: "MPRIS player removed"
          triggers:
            - type: bus_name_removed
            # filter: # TODO: Check if this is the last or inactive one #
          actions:
            - type: mqtt_publish
              topic: dbus2mqtt/org.mpris.MediaPlayer2/state
              payload_type: json
              payload_template:
                PlaybackStatus: "Off"
        - name: "Mute"
          triggers:
            - type: mqtt_msg
              topic: dbus2mqtt/org.mpris.MediaPlayer2/command
              filter: "{{ value_json.action == 'mute' }}"
          actions:
            - type: context_set
              context:
                current_volume: |
                  0
                #   {{ dbus_property_get(mpris_bus_name, path, 'org.mpris.MediaPlayer2.Player', 'Volume', 0) }}
                current_muted: |
                  {{ muted | default(False) }}
            - type: context_set
              dbus_object_context:
                muted: |
                  {{ not current_muted }}
                unmuted_volume: >
                  {% if not current_muted %}
                    {{ current_volume }}
                  {% else %}
                    None
                  {% endif %}

            # - type: dbus_method_call
            #   # Method is called on all matching bus_names & exposed methods configured above
            #   # This behavior mimics dbus_client._on_mqtt_msg
            #   method: xxx
            #   args: []
            # - type: dbus_property_set
            #   # Property is set on all matching bus_names & exposed properties configured above
            #   # This behavior mimics dbus_client._on_mqtt_msg
            #   property: Volume
            #   value: >
            #     {% if muted %}
            #       {{ unmuted_volume }}
            #     {% else %}
            #       0
            #     {% endif %}
