# mqtt:
#   host:
#   port:

dbus:
  # mappings:
  subscriptions:
    - bus_name: org.mpris.MediaPlayer2.*
      path: /org/mpris/MediaPlayer2

      # https://specifications.freedesktop.org/mpris-spec/latest/Player_Interface.html
      interfaces:
        - interface: org.freedesktop.DBus.Properties
          # signals:
          #     # with no postprocessing, just use handlers otherwise
          #   - signal: PropertiesChanged  # simple forwarding of signal to mqtt
          #     mqtt_signal_topic: dbus2mqtt/org.mpris.MediaPlayer2/signal/PropertiesChanged
          signal_handlers:
            # TODO: allow for trigger by timer
            # Position property updates do not trigger a PropertiesChange event
            - signal: PropertiesChanged
              filter: "{{ args[0] == 'org.mpris.MediaPlayer2.Player' && dbus_property('org.mpris.MediaPlayer2.Player') }}"
              # global_template_context:
              #   # active_mpris_player: {{ dbus_call('org.freedesktop.DBus.Properties', 'Get', 'org.mpris.MediaPlayer2.Player', 'PlaybackStatus') }}
              #   active_mpris_player_bus_name: "{{ bus_name }}"  # signal.sender
              mqtt_topic: dbus2mqtt/org.mpris.MediaPlayer2/state2
              payload_template: |
                interface_name: {{ args[0] }}
            # - signal: PropertiesChanged
            #   filter: "{{ args[0] == 'org.mpris.MediaPlayer2.Player' }}"
            #   payload_template: |
            #     interface_name: {{ args[0] }}
            #     changed_properties:
            #       {{ args[1] | to_nice_yaml | indent(2) }}
            #     invalidated_properties: {{ args[2] }}
            #     properties:
            #       {{ dbus_call('org.freedesktop.DBus.Properties', 'GetAll', 'org.mpris.MediaPlayer2') }}
            #     player_properties:
            #       {{ dbus_call('org.freedesktop.DBus.Properties', 'GetAll', 'org.mpris.MediaPlayer2.Player') }}
            #   # mqtt_topic: dbus2mqtt/{{ bus_name }}/state
            #   mqtt_topic: dbus2mqtt/org.mpris.MediaPlayer2/debug
          methods:
            - method: GetAll

        - interface: org.mpris.MediaPlayer2
          mqtt_call_method_topic: dbus2mqtt/org.mpris.MediaPlayer2/command
          methods:
            - method: Quit

        - interface: org.mpris.MediaPlayer2.Player
          mqtt_call_method_topic: dbus2mqtt/org.mpris.MediaPlayer2/command
          # bus_name_selection: first/all/...
          methods:
            - method: Pause
            - method: Play
            - method: PlayPause
            - method: OpenUri
            - method: Stop
          properties:
            - property: Metadata
            - property: Volume
            - property: PlaybackStatus

      flows:
        # - name: "set active player"
        #   triggers:
        #     - type: dbus_signal
        #       bus_name: "org.freedesktop.Notifications"
        #       path: "/org/freedesktop/Notifications"
        #       interface: "org.freedesktop.Notifications"
        #       signal: PropertiesChanged
        #       filter: "{{ args[0] == 'org.mpris.MediaPlayer2.Player' }}"
        #   global_template_context:
        #     active_mpris_player: "{{ dbus_signal.args[0] }}"  # sets active bus_name
        - name: "MPRIS publish state"
          triggers:
            # - type: mqtt
            #   topic: "sensor/input"
            - type: schedule
              interval: { seconds: 1 }
              # condition: "{{ dbus_list('org.mpris.MediaPlayer2.*') | list | length > 0 }}"

              # cron: { second: "*" }
            # - type: dbus_signal
            # #   bus_name: "org.freedesktop.Notifications"
            # #   path: "/org/freedesktop/Notifications"
            #   interface: "org.freedesktop.Notifications"
            #   signal: "NotificationClosed"
            #   # filter: ""
          # template_context:
          #   active_mpris_player_bus_name: "{{ global.active_mpris_player_bus_name }}"
          # dbus_context:
          #   bus_name: org.mpris.MediaPlayer2.*
          #   path: /org/mpris/MediaPlayer2
          #   bus_name_selector_ref: abc
          #   active_bus_name_selector:
          #     - type: dbus_signal_context
          #     # - type: property_value
          #     #   expression: org.mpris.MediaPlayer2.Player:PlaybackStatus == Playing 
          #       # interface: org.mpris.MediaPlayer2.Player
          #       # property: PlaybackStatus
          #       # value: Playing
          #     - type: first
          actions:
            - type: context_set
              # global_context:
              context:
                mpris_bus_name: '{{ dbus_list("org.mpris.MediaPlayer2.*") | first | default(none) }}'
                # mpris_bus_name: "{{ dbus_list('org.mpris.MediaPlayer2.*') | last }}"
                # mpris_bus_name: "{{ dbus_list('org.mpris.MediaPlayer2.*') | last_seen }}"
                # mpris_bus_name: "{{ dbus_list('org.mpris.MediaPlayer2.*') | property(PlaybackStatus, Playing) }}"
                # mpris_bus_name: "{{ get_preferred_mpris('org.mpris.MediaPlayer2.*') | first }}"
            - type: mqtt_publish
              topic: dbus2mqtt/org.mpris.MediaPlayer2/state
              # bus_name: defaults to <subscription>
              # path: defaults to <subscription>
              payload_template: |
                {{ dbus_call(bus_name_selector_ref, 'org.freedesktop.DBus.Properties', 'GetAll', 'org.mpris.MediaPlayer2.Player') }}
            - type: mqtt_publish
              topic: dbus2mqtt/org.mpris.MediaPlayer2/debug
              # bus_name: defaults to <subscription>
              # path: defaults to <subscription>
              payload_template: |
                interface_name: {{ args[0] }}
                changed_properties:
                  {{ args[1] | to_nice_yaml | indent(2) }}
                invalidated_properties: {{ args[2] }}
                properties:
                  {{ dbus_call('org.freedesktop.DBus.Properties', 'GetAll', 'org.mpris.MediaPlayer2') }}
                player_properties:
                  {{ dbus_call('org.freedesktop.DBus.Properties', 'GetAll', 'org.mpris.MediaPlayer2.Player') }}

flows:
  - name: "Publish dbus2mqtt state"
    triggers:
      - type: schedule
        interval: { seconds: 1 }
    actions:
      - type: context_set
        context:
          mpris_bus_names: '{{ dbus_list("org.mpris.MediaPlayer2.*") }}'
      - type: mqtt_publish
        topic: dbus2mqtt/subscriptions/state
        payload_type: json
        payload_template: |
          now: "{{ now() }}"
          mpris_dbus_names: '{{ mpris_bus_names }}'
          bus_names: '{{ dbus_list("*") }}'
